{"version":3,"file":"static/js/521.1a062c4c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","../node_modules/@chakra-ui/card/dist/index.esm.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/ContactsContainer.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contactSlice';\nimport {\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Input,\n  Stack,\n  Button,\n} from '@chakra-ui/react';\nimport { FiEdit } from 'react-icons/fi';\n\nconst PhonebookContact = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.root.contacts.items);\n\n  const onInputText = event => {\n    const element = event.currentTarget.value;\n    switch (event.target.name) {\n      case 'name':\n        setName(element);\n        break;\n      case 'number':\n        setNumber(element);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onResetInput = () => {\n    setNumber('');\n    setName('');\n  };\n\n  const nameCheck = () => {\n    let contactName = true;\n    for (const contact of contacts) {\n      contact.name.includes(name)\n        ? (contactName = false)\n        : (contactName = true);\n    }\n    return contactName;\n  };\n\n  const onSubmitForms = ev => {\n    ev.preventDefault();\n    const obj = { name, number };\n    nameCheck()\n      ? dispatch(addContact(obj))\n      : alert(name + ' is already in contacts');\n    onResetInput();\n  };\n\n  return (\n    <Tabs>\n      <TabPanels>\n        <TabPanel>\n          <form onSubmit={onSubmitForms}>\n            <Stack spacing={3} width=\"600px\">\n              <label>\n                Name\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  required\n                  value={name}\n                  onChange={onInputText}\n                />\n              </label>\n              <label>\n                Number\n                <Input\n                  type=\"tel\"\n                  name=\"number\"\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                  value={number}\n                  onChange={onInputText}\n                />\n              </label>\n            </Stack>\n            <Button type=\"submit\" marginTop=\"12px\" leftIcon={<FiEdit />}>\n              Add contact\n            </Button>\n          </form>\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n};\n\nexport default PhonebookContact;\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// src/card.tsx\nimport {\n  forwardRef,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// src/card-context.tsx\nimport { createStylesContext } from \"@chakra-ui/system\";\nvar [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\n// src/card.tsx\nvar Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ React.createElement(chakra.div, {\n    ref,\n    className: cx(\"chakra-card\", className),\n    __css: {\n      display: \"flex\",\n      flexDirection: direction,\n      justifyContent: justify,\n      alignItems: align,\n      position: \"relative\",\n      minWidth: 0,\n      wordWrap: \"break-word\",\n      ...styles.container\n    },\n    ...rest\n  }, /* @__PURE__ */ React.createElement(CardStylesProvider, {\n    value: styles\n  }, children));\n});\n\n// src/card-body.tsx\nimport { forwardRef as forwardRef2, chakra as chakra2 } from \"@chakra-ui/system\";\nvar CardBody = forwardRef2(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    ref,\n    className: cx(\"chakra-card__body\", className),\n    __css: styles.body,\n    ...rest\n  });\n});\n\n// src/card-footer.tsx\nimport {\n  forwardRef as forwardRef3,\n  chakra as chakra3\n} from \"@chakra-ui/system\";\nvar CardFooter = forwardRef3(function CardFooter2(props, ref) {\n  const { className, justify, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ React.createElement(chakra3.div, {\n    ref,\n    className: cx(\"chakra-card__footer\", className),\n    __css: {\n      ...styles.footer,\n      display: \"flex\",\n      justifyContent: justify\n    },\n    ...rest\n  });\n});\n\n// src/card-header.tsx\nimport { forwardRef as forwardRef4, chakra as chakra4 } from \"@chakra-ui/system\";\nvar CardHeader = forwardRef4(function CardHeader2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ React.createElement(chakra4.div, {\n    ref,\n    className: cx(\"chakra-card__header\", className),\n    __css: styles.header,\n    ...rest\n  });\n});\nexport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  useCardStyles\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contactSlice';\nimport { useEffect } from 'react';\nimport { fetchStart } from '../../redux/registration/registrOperation';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Heading,\n  SimpleGrid,\n} from '@chakra-ui/react';\nimport { FiTrash2 } from 'react-icons/fi';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.root.auth.token);\n  const { items, error, isLoading } = useSelector(state => state.root.contacts);\n  const filter = useSelector(state => state.root.filters);\n\n  useEffect(() => {\n    if (token) {\n      dispatch(fetchStart());\n    }\n  }, [dispatch, token]);\n\n  return (\n    <SimpleGrid\n      spacing={4}\n      templateColumns=\"repeat(auto-fill, minmax(250px, 1fr))\"\n    >\n      {items\n        .filter(el => el.name.toLowerCase().includes(filter))\n        .map(el => (\n          <Card key={el.id}>\n            <CardHeader>\n              <Heading size=\"md\">{el.name}: </Heading>\n            </CardHeader>\n            <CardHeader>\n              <Heading size=\"md\">{el.number}</Heading>\n            </CardHeader>\n\n            <Button\n              type=\"click\"\n              name={el.id}\n              onClick={() => dispatch(deleteContact(el.id))}\n              leftIcon={<FiTrash2 />}\n            >\n              Delete\n            </Button>\n          </Card>\n        ))}\n      {isLoading && <h2>Loading</h2>}\n      {error && <h2>Error: {error}</h2>}\n    </SimpleGrid>\n  );\n};\n\nexport default ContactsList;\n","import { useDispatch, useSelector } from 'react-redux';\n// import { FilterInput } from './FilterList';\nimport { filterTask } from '../../redux/filterSlice';\nimport { Heading, Input, Stack } from '@chakra-ui/react';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filters = useSelector(state => state.filter);\n\n  return (\n    <>\n      <Heading as=\"h3\" size=\"md\">\n        Find contcts by name\n      </Heading>\n      <Stack spacing={3} width=\"300px\">\n        <Input\n          size=\"sm\"\n          type=\"text\"\n          name=\"filter\"\n          value={filters}\n          onChange={e => dispatch(filterTask(e.target.value))}\n        />\n      </Stack>\n    </>\n  );\n};\n\nexport default Filter;\n","import ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { Heading } from '@chakra-ui/react';\n\nconst ContactsContainer = () => {\n  return (\n    <div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Heading as=\"h1\" size=\"xl\" noOfLines={1} style={{ marginTop: '15px' }}>\n          Phonebook\n        </Heading>\n        <ContactForm />\n        {/* <div></div> */}\n        <Filter />\n      </div>\n      <Heading\n        as=\"h2\"\n        size=\"lg\"\n        style={{ textAlign: 'center', marginTop: '10px', marginBottom: '20px' }}\n      >\n        Contacts\n      </Heading>\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsContainer;\n"],"names":["useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","state","root","items","onInputText","event","element","currentTarget","value","target","onSubmit","ev","preventDefault","obj","contactName","includes","nameCheck","alert","addContact","spacing","width","type","pattern","title","required","onChange","marginTop","leftIcon","cx","classNames","filter","Boolean","join","createStylesContext","CardStylesProvider","useCardStyles","Card","forwardRef","props","ref","omitThemingProps","className","children","direction","justify","align","rest","styles","useMultiStyleConfig","React","chakra","__css","display","flexDirection","justifyContent","alignItems","position","minWidth","wordWrap","container","CardHeader","forwardRef2","chakra2","body","forwardRef3","chakra3","footer","forwardRef4","chakra4","header","token","auth","error","isLoading","filters","useEffect","fetchStart","templateColumns","el","toLowerCase","map","size","id","onClick","deleteContact","as","e","filterTask","style","noOfLines","ContactForm","textAlign","marginBottom","ContactList"],"sourceRoot":""}